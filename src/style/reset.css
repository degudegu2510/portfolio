@layer base {
  :root {
    color-scheme: light dark;
  }
  
  html {
    font-size: 16px;
    font-family: YakuHanJP, "Noto Sans JP", apple-system, BlinkMacSystemFont,
      Roboto, Helvetica, Arial, "Hiragino Kaku Gothic ProN", "Hiragino Sans",
      Meiryo, sans-serif;
    line-height: var(--line-height-body);
    color: var(--color-high-emphasis);
    background-color: var(--color-background);
  }

  #root {
    min-height: 100vh;
    min-width: 100%;
  }
  
  /**
   * uaplus.css version 0.0.1
   */
  
  /**
   * Different box model
   * 
   * We use the traditional box model, where the padding and border 
   * of the element is drawn inside and not outside the specified 
   * width and height. That makes combining relative and absolute 
   * units in properties like <code>inline-size</code> and 
   * <code>block-size</code> easier.
   * 
   * See https://en.wikipedia.org/wiki/CSS_box_model
   */
  *,
  *::after,
  *::before {
    box-sizing: border-box;
  }
  
  /**
    * Improve focus styles
    *
    * Add spacing between content and its focus outline.
    */
  :focus-visible {
    outline-offset: 3px;
  }
  
  /**
    * Disable text size adjustment
    * 
    * To improve readability on non-mobile optimized websites, browsers
    * like mobile Safari increase the default font size when you switch
    * a website from portrait to landscape. We don't want that for our 
    * optimized sites.
    *
    * See https://kilianvalkhof.com/2022/css-html/your-css-reset-needs-text-size-adjust-probably/
    */
  :where(html) {
    -webkit-text-size-adjust: none;
    text-size-adjust: none;
  }
  
  /**
    * Increase line height
    *
    * Long paragraphs are easier to read if the line height is higher.
    */
  
  /**
    * Add scrollbar gutter
    *
    * Prevent the page from "jumping" when switching from a long to a short page.
    *
    */
  :where(html) {
    scrollbar-gutter: stable;
  }
  
  /**
    * Improve abbreviations with titles
    * 
    * The abbr element with the title isn't helpful regarding 
    * accessibility because support is inconsistent, and it's only 
    * accessible to some users. Still, it's commonly used. 
    * This rule shows a dotted underline on abbreviations in all 
    * browsers (there's a bug in Safari) and changes the cursor.
    * 
    * See https://adrianroselli.com/2024/01/using-abbr-element-with-title-attribute.html
    */
  :where(abbr[title]) {
    cursor: help;
    text-decoration-line: underline;
    text-decoration-style: dotted;
  }
  
  /**
    * Avoid overflow caused by embedded content
    * 
    * Ensure that embedded content (audio, video, images, etc.) 
    * doesn't overflow its container.
    */
  :where(audio, iframe, img, svg, video) {
    max-block-size: 100%;
    max-inline-size: 100%;
  }
  
  /**
    * Prevent fieldsets from causing overflow
    *
    * Reset the default `min-inline-size: min-content` to prevent
    * children from stretching fieldsets
    *
    * See https://github.com/twbs/bootstrap/issues/12359
    * and https://html.spec.whatwg.org/multipage/#the-fieldset-and-legend-elements
    */
  :where(fieldset) {
    min-inline-size: 0;
  }
  
  /**
    * Turn labels into block elements
    * 
    * Labels for inputs, selects, and textarea should be block 
    * elements.
    */
  :where(label):has(+ :where(textarea, input, select)) {
    display: block;
  }
  
  /**
    * Inherit font styling in form elements
    * 
    * buttons, inputs, selects, and textarea should have the same font
    * family and size as the rest of the page.
    */
  :where(button, input, select, textarea) {
    font-family: inherit;
    font-size: inherit;
  }
  
  /**
    * Normalize search input styles
    *  
    * Remove the rounded corners of search inputs on macOS and IOS 
    * and normalize the background color
    */
  :where([type="search"]) {
    -webkit-appearance: textfield;
  }
  
  /* iOS only */
  @supports (-webkit-touch-callout: none) {
    :where([type="search"]) {
      border: 1px solid var(--color-divider);
      background-color: var(--color-surface);
    }
  }
  
  /**
    * Improve table styling
    *  
    * With the default styling, tables are hard to scan. These rules 
    * add padding and collapsed borders.
    */
  :where(table) {
    border-collapse: collapse;
    border: 1px solid;
  }
  
  :where(th, td) {
    border: 1px solid;
  }
  
  /**
    * Fading dialogs
    *  
    * Add fade in and fade out transitions for the dialog element
    * and backdrops
    */
  :where(dialog)::backdrop {
    background: var(--color-scrim);
  }
  
  :where(dialog),
  :where(dialog)::backdrop {
    opacity: 0;
    transition: opacity 300ms ease-out, display 300ms allow-discrete,
      overlay 300ms allow-discrete;
  }
  
  :where(dialog[open]),
  :where(dialog[open])::backdrop {
    opacity: 1;
  }
  
  @starting-style {
    :where(dialog[open]),
    :where(dialog[open])::backdrop {
      opacity: 0;
    }
  }
  
  /**
    * Increase specificity of [hidden]
    *  
    * Make it harder to accidentally unhide elements with the 
    * [hidden] attribute while still maintaining the until-found 
    * functionality.
    */
  [hidden]:not([hidden="until-found"]) {
    display: none !important;
  }
}

